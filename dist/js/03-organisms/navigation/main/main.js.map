{"version":3,"file":"js/03-organisms/navigation/main/main.js","mappings":";;;;;AAAAA,MAAM,CAACC,SAAS,CAACC,OAAO,CAAG,CACzBC,MAAM,iBAACC,CAAO,CAAE,IAERC,EAAI,CAAGD,CAAO,CAACE,aAAa,CAAC,MAAM,CAAC,CACpCC,CAAI,CAAGH,CAAO,CAACE,aAAa,CAAC,WAAW,CAAC,CACzCE,CAAQ,CAAGJ,CAAO,CAACE,aAAa,CACpC,iEAAiE,CAClE,CACKG,CAAO,CAAGL,CAAO,CAACE,aAAa,CAAC,yBAAyB,CAAC,CAC1DI,CAAU,CAAGN,CAAO,CAACE,aAAa,CAAC,cAAc,CAAC,CAElDK,CAAiB,CAAGP,CAAO,CAACE,aAAa,CAAC,oBAAoB,CAAC,CAErE,GAAIK,CAAiB,CAAE,CAErB,GAAIF,CAAO,CAAE,CACX,GAAMG,EAAY,CAAGH,CAAO,CAACI,SAAS,IAAM,CAC5CL,CAAQ,CAACM,KAAK,CAACF,CAAY,CAC7B,CAEAD,CAAiB,CAACI,gBAAgB,CAAC,OAAO,CAAE,UAAM,CAC3CL,CAAU,CAACM,SAAS,CAACC,QAAQ,CAAC,OAAO,CAAC,EACzCb,CAAO,CAACE,aAAa,CAAC,oBAAoB,CAAC,CAACY,cAAc,IAAO,CAC/DC,QAAQ,CAAE,QAAQ,CAClBC,KAAK,CAAE,KAAK,CACZC,MAAM,CAAE,SACV,CAAC,CAAC,CAGJhB,CAAI,CAACiB,eAAe,CAAC,kBAAkB,CACzC,CAAC,CACH,CAGAC,QAAQ,CAACR,gBAAgB,CAAC,OAAO,CAAE,SAACS,CAAC,CAAK,CAC1B,QAAQ,GAAlBA,CAAC,CAACC,GAAgB,EAChBd,CAAiB,EAAIJ,CAAI,CAACmB,OAAO,CAAC,0BAAwB,CAAC,EAC7Df,CAAiB,CAACgB,KAAK,EAG7B,CAAC,CAAC,CAEFC,MAAM,CAACb,gBAAgB,CAAC,OAAO,CAAE,SAACS,CAAC,CAAK,CAClCjB,CAAI,EAAI,CAACA,CAAI,CAACU,QAAQ,CAACO,CAAC,CAACK,MAAM,CAAC,GAElCC,KAAK,CAACC,IAAI,CAACR,QAAQ,CAACS,sBAAsB,WAAIzB,CAAI,CAAC0B,EAAE,WAAS,CAAC,CAACC,OAAO,CACrE,SAACC,CAAC,QAAKA,EAAC,CAACnB,SAAS,CAACoB,MAAM,CAAC,WAAW,CAAC,EACvC,CAEDN,KAAK,CAACO,SAAS,CAACH,OAAO,CAACI,IAAI,CAC1B/B,CAAI,CAACgC,gBAAgB,8BAA8B,CACnD,SAACC,CAAC,CAAK,CACLA,CAAC,CAACC,YAAY,CAAC,eAAe,CAAE,OAAO,CACzC,CAAC,CACF,CAEL,CAAC,CACH,CACF,CAAC,C","sources":["webpack://emulsify-drupal/./components/03-organisms/navigation/main/main.js"],"sourcesContent":["Drupal.behaviors.mainNav = {\n  attach(context) {\n    // Selectors\n    const body = context.querySelector('body');\n    const menu = context.querySelector('#main-nav');\n    const menuList = context.querySelector(\n      '#main-nav > .main-nav__menu-list-wrapper > .main-nav__menu-list',\n    );\n    const utility = context.querySelector('.utility_nav__menu-list');\n    const siteHeader = context.querySelector('.site-header');\n    // Primary toggle for the whole menu tree.\n    const menuPrimaryToggle = context.querySelector('#main-nav > button');\n\n    if (menuPrimaryToggle) {\n      // Clone utility into the correct location for mobile.\n      if (utility) {\n        const utilityClone = utility.cloneNode(true);\n        menuList.after(utilityClone);\n      }\n      // scroll down to the main menu if alerts are present.\n      menuPrimaryToggle.addEventListener('click', () => {\n        if (!siteHeader.classList.contains('stuck')) {\n          context.querySelector('.site-header + div').scrollIntoView(true, {\n            behavior: 'smooth',\n            block: 'end',\n            inline: 'nearest',\n          });\n        }\n        // Prevent body scrolling when menu it active.\n        body.toggleAttribute('data-body-frozen');\n      });\n    }\n\n    // Hide menu when escape key press.\n    document.addEventListener('keyup', (e) => {\n      if (e.key === 'Escape') {\n        if (menuPrimaryToggle && menu.matches('[aria-expanded=\"true\"]')) {\n          menuPrimaryToggle.click();\n        }\n      }\n    });\n\n    window.addEventListener('click', (e) => {\n      if (menu && !menu.contains(e.target)) {\n        // Reset any open levels.\n        Array.from(document.getElementsByClassName(`${menu.id}__item`)).forEach(\n          (g) => g.classList.remove('sub--open'),\n        );\n        // Reset all aria-expanded.\n        Array.prototype.forEach.call(\n          menu.querySelectorAll(`button, [href], [tabindex]`),\n          (i) => {\n            i.setAttribute('aria-expanded', 'false');\n          },\n        );\n      }\n    });\n  },\n};\n"],"names":["Drupal","behaviors","mainNav","attach","context","body","querySelector","menu","menuList","utility","siteHeader","menuPrimaryToggle","utilityClone","cloneNode","after","addEventListener","classList","contains","scrollIntoView","behavior","block","inline","toggleAttribute","document","e","key","matches","click","window","target","Array","from","getElementsByClassName","id","forEach","g","remove","prototype","call","querySelectorAll","i","setAttribute"],"sourceRoot":""}