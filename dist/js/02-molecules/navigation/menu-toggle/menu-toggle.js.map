{"version":3,"file":"js/02-molecules/navigation/menu-toggle/menu-toggle.js","mappings":"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","sources":["webpack://emulsify-drupal/./components/02-molecules/navigation/menu-toggle/menu-toggle.js"],"sourcesContent":["Drupal.behaviors.menuToggle = {\n  attach(context) {\n    // Selectors\n    const menu = context.querySelectorAll('.menu-with-toggle');\n\n    // Function to trap focus when mobile menu is expanded.\n    function trapKeyboard(menuItem) {\n      if (menuItem.nextElementSibling) {\n        const focusableElements = menuItem.nextElementSibling.querySelectorAll(\n          `button, [href], [tabindex]`,\n        );\n        const firstFocusableElement = focusableElements[0];\n        const lastFocusableElement =\n          focusableElements[focusableElements.length - 1];\n\n        menuItem.nextElementSibling.addEventListener('keydown', (e) => {\n          const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n\n          if (!isTabPressed) {\n            return;\n          }\n\n          if (e.shiftKey) {\n            if (document.activeElement === firstFocusableElement) {\n              e.preventDefault();\n              lastFocusableElement.focus();\n            }\n          } else if (document.activeElement === lastFocusableElement) {\n            e.preventDefault();\n            firstFocusableElement.focus();\n          }\n        });\n      }\n    }\n\n    // Toggle aria-expanded attribute.\n    function toggleAria(el) {\n      // el may be a placeholder <span> so we need to target the button\n      const button = el.parentElement.querySelector(`[class*='__toggle']`);\n      const list = el.parentElement.querySelector(\n        `[class*='__menu-list-wrapper']`,\n      );\n\n      // reset all existing items\n      Array.prototype.forEach.call(menu, (m) => {\n        Array.prototype.forEach.call(\n          m\n            .querySelector(`[class*='__menu-list-wrapper']`)\n            .querySelectorAll(`[class*='__toggle]`),\n          (i) => {\n            if (i.outerHTML !== button.outerHTML && i.nextElementSibling) {\n              i.setAttribute('aria-expanded', 'false');\n              i.nextElementSibling.setAttribute('inert', '');\n            }\n          },\n        );\n      });\n\n      button.setAttribute(\n        'aria-expanded',\n        button.getAttribute('aria-expanded') === 'true' ? 'false' : 'true',\n      );\n\n      if (button.getAttribute('aria-expanded') === 'false') {\n        list.setAttribute('inert', '');\n      } else {\n        list.removeAttribute('inert');\n      }\n    }\n\n    function toggleMenu(el, menuName) {\n      const menuItems = context.querySelectorAll(`.${menuName}__item`);\n\n      // Tell global nav what level is active.\n      let menuLevel = '';\n      if (el.getAttribute('data-menu-level')) {\n        menuLevel = el.getAttribute('data-menu-level');\n      } else {\n        menuLevel = el.nextElementSibling.getAttribute('data-menu-level');\n      }\n      // Reset any open levels.\n      Array.prototype.forEach.call(menu, (m) => {\n        m.setAttribute('data-menu-level', menuLevel);\n      });\n\n      // Primary toggle for the whole menu tree.\n      if (el.parentElement.hasAttribute('aria-labelledby')) {\n        el.parentElement.classList.toggle('menu--open');\n        // Reset any open levels.\n        Array.prototype.forEach.call(menuItems, (item) => {\n          item.classList.remove('sub--open');\n        });\n        // Toggle the button label.\n        const label = el.lastElementChild;\n        if (el.getAttribute('aria-expanded') === 'true') {\n          label.innerText = 'Close';\n        } else {\n          label.innerText = el.getAttribute('aria-label');\n        }\n      }\n      // Expand/arrow navigation.\n      else if (\n        el.nextElementSibling &&\n        el.nextElementSibling.classList.contains(\n          `${menuName}__menu-list-wrapper`,\n        )\n      ) {\n        Array.prototype.forEach.call(menuItems, (item) => {\n          if (\n            item.innerText !== el.parentElement.innerText &&\n            item.classList.contains('sub--open')\n          ) {\n            item.classList.remove('sub--open');\n          }\n        });\n        el.parentElement.classList.toggle('sub--open');\n      }\n      // Expand/placeholder navigation.\n      else if (\n        el.nextElementSibling &&\n        el.nextElementSibling.nextElementSibling &&\n        el.nextElementSibling.nextElementSibling.classList.contains(\n          `${menuName}__menu-list-wrapper`,\n        )\n      ) {\n        Array.prototype.forEach.call(menuItems, (item) => {\n          if (\n            item.innerText !== el.parentElement.innerText &&\n            item.classList.contains('sub--open')\n          ) {\n            item.classList.remove('sub--open');\n          }\n        });\n        el.parentElement.classList.toggle('sub--open');\n      }\n      // Back to [level] toggle.\n      else {\n        Array.prototype.forEach.call(menuItems, (item) => {\n          if (\n            item.innerText !== el.parentElement.innerText &&\n            item.classList.contains('sub--open')\n          ) {\n            item.classList.remove('sub--open');\n          }\n        });\n        el.parentElement.classList.toggle('sub--open');\n      }\n    }\n    // Toggle mobile menu classes when clicked.\n    if (menu) {\n      Array.prototype.forEach.call(menu, (m) => {\n        const toggleExpand = m.querySelectorAll(`[class*='__toggle']`);\n        Array.prototype.forEach.call(toggleExpand, (item) => {\n          item.addEventListener('click', () => {\n            toggleAria(item);\n            trapKeyboard(item);\n            toggleMenu(item, m.id);\n          });\n        });\n\n        const placeholderItem = m.querySelectorAll(`[class*='__placeholder']`);\n        Array.prototype.forEach.call(placeholderItem, (item) => {\n          item.addEventListener('keypress', (event) => {\n            if (event.key === 'Enter' || event.key === 'Escape') {\n              event.preventDefault();\n              item.click();\n            }\n          });\n          item.addEventListener('click', () => {\n            toggleAria(item);\n            trapKeyboard(item);\n            toggleMenu(item, m.id);\n          });\n        });\n      });\n      document.onkeydown = (evt) => {\n        if (evt.key === 'Escape') {\n          // Reset any open levels.\n          Array.from(context.querySelectorAll(`[class*='__item']`)).forEach(\n            (g) => g.classList.remove('sub--open'),\n          );\n          context.querySelector('body').removeAttribute('data-body-frozen');\n          // Reset all aria-expanded.\n          Array.prototype.forEach.call(menu, (m) => {\n            m.classList.remove('menu--open');\n            Array.prototype.forEach.call(\n              m.querySelectorAll(`button, [href], [tabindex]`),\n              (i) => {\n                i.setAttribute('aria-expanded', 'false');\n              },\n            );\n\n            Array.prototype.forEach.call(\n              m\n                .querySelector(`[class*='__menu-list-wrapper']`)\n                .querySelectorAll(`[class*='__menu-list-wrapper']`),\n              (i) => {\n                i.setAttribute('inert', '');\n              },\n            );\n          });\n        }\n      };\n    }\n  },\n};\n"],"names":["Drupal","behaviors","menuToggle","attach","context","trapKeyboard","menuItem","nextElementSibling","focusableElements","querySelectorAll","firstFocusableElement","lastFocusableElement","length","addEventListener","e","isTabPressed","key","keyCode","shiftKey","document","activeElement","preventDefault","focus","toggleAria","el","button","parentElement","querySelector","list","Array","prototype","forEach","call","menu","m","i","outerHTML","setAttribute","getAttribute","removeAttribute","toggleMenu","menuName","menuItems","concat","menuLevel","hasAttribute","classList","toggle","item","remove","label","lastElementChild","innerText","contains","toggleExpand","id","placeholderItem","event","click","onkeydown","evt","from","g"],"sourceRoot":""}